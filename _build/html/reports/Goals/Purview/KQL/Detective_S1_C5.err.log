Traceback (most recent call last):
  File "C:\Users\paulj\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\paulj\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paulj\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paulj\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\paulj\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\paulj\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\paulj\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
Finding the channel

let users=ChatLogs
//|top 100 by Timestamp
| project Timestamp, Message, user=tostring(split(Message, '\'',1)[0]),channel=tostring((split(Message, '\'',3))), action=tostring(split(Message, '\'',2))
| where action == '[" joined the channel "]'
| summarize channels=dcount(channel) by user
| where channels == 1
| project user
;// users is the list of users who have only entered one channel
// now I want the channels with only 4 users who have ever used them
let channels=ChatLogs
| project Timestamp, Message, user=tostring(split(Message, '\'',1)[0]),channel=tostring((split(Message, '\'',3))), action=tostring(split(Message, '\'',2))
//| where user in (users)
| where action == '[" joined the channel "]'
| distinct channel,user
| summarize make_list(user) by channel
| where array_length(list_user) == 4
// where all list users are in 'users'
| mv-expand list_user
| where list_user in~ (users)
| summarize list=make_list(list_user) by channel
| where array_length(list)==4
// channels where only 4 users and all have only joined the one channel
;
ChatLogs
| project Timestamp, Message, user=tostring(split(Message, '\'',1)[0]),channel=tostring((split(Message, '\'',3))), action=tostring(split(Message, '\'',2))
| where channel in (channels)
//cf053de3c7b - everyone joins, chats, then leaves at the same time

/// NEW WINDOW
let targets=ChatLogs
| project Timestamp, Message, user=tostring(split(Message, '\'',1)[0]),channel=tostring((split(Message, '\'',3))), action=tostring(split(Message, '\'',2))
| where channel == '["cf053de3c7b"]'
| distinct user
;
ChatLogs
| project Timestamp, Message, user=tostring(split(Message, '\'',1)[0]),channel=tostring((split(Message, '\'',3))), action=tostring(split(Message, '\'',2))
| where user in (targets)
| distinct channel
| sort by channel

Fun data all over the place
------------------


[1;36m  Cell [1;32mIn[1], line 1[1;36m[0m
[1;33m    Finding the channel[0m
[1;37m            ^[0m
[1;31mSyntaxError[0m[1;31m:[0m invalid syntax


